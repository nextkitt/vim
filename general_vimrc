"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General {
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Enable syntax highlighting
syntax enable
syntax on

set imcmdline
set modeline


""" indent {
set autoindent
set cindent
set smartindent
"""}

""" tab {
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

au FileType Makefile set noexpandtab
"""}

""" search {
"set ignorecase     " Ignore case when searching
"set smartcase      " When searching try to be smart about cases 
"set incsearch      " Makes search act like search in modern browsers
"set nowrapscan     "
set hlsearch		" Highlight search results
"""}

""" match {
set showmatch		" Cursor shows matching bracket
"""}


""" fold {
set foldmethod=syntax
set foldlevel=100
"""}

""" filetype {
filetype on         " Enable filetype detection
filetype plugin on  " Enable filetype-specific indenting
filetype indent on  " Enable filetype-specific plugins
"""}

""" encoding {
set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,gb2312,gbk,gb18030,ucs-bom,cp936,big5,euc-jp,euc-kr,latin1
"set fileencoding=utf-8
" Use Unix as the standard file type
set ffs=unix,dos,mac
"""}

""" backspace {
set backspace=indent,eol,start      " More powerful backspacing
" Configure backspace so it acts as it should act
"set backspace=eol,start,indent
set whichwrap+=<,>,h,l
"""}


""" View {
set number          " Show line numbers
set cmdheight=1     " Height of the command bar
set laststatus=2    " Use 2 lines for the status bar
set shortmess=atI   " 
set showcmd         " Show typed command in status bar
set ruler           " Show the cursor position all the time
set showmode        " Show current mode
set showfulltag     " ?
"set scrolloff=0    " 5 lines above/below cursor when scrolling

" Disable sound on errors
set noerrorbells
set novisualbell
set vb t_vb= 

"""}

""" cursor {
"Restore cursor to file position in previous editing session
"set viminfo='10,\"100,:20,%,n~/.viminfo
"au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" Return to last edit position when opening files (You want this!)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"""}

""" colorscheme {
set t_Co=256            " 256 color mode
"set cursorline         " Highlight current line
"set cursorcolumn       " 
"set background=light   " 
"set background=dark    " 
"set mouse=a            " 

"colorscheme solarized
"colorscheme elflord
"colorscheme darkblue
"colorscheme evening
"colorscheme murphy
"colorscheme torte
"colorscheme desert

"set colorcolumn=80
"""}

"""  wildmenu {
" Turn on the WiLd menu
set wildmenu
set wildmode=longest:full,full
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
else
    set wildignore+=.git\*,.hg\*,.svn\*
endif
"""}

""" other {
set history=1000  " Sets how many lines of history VIM has to remember
"set autoread      " Set to auto read when a file is changed from the outside

" :W sudo saves the file 
" (useful for handling the permission-denied error)
command W w !sudo tee % > /dev/null

"""}

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" } <= General 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Module {
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" cscope [
 "autoload cscope.out
if v:version > 702
    if has("cscope")
        if filereadable("cscope.out")
            cscope add  cscope.out
        endif
    endif
endif
"""]
